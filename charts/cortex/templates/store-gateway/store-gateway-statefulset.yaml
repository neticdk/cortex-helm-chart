{{- if eq .Values.config.storage.engine "blocks" -}}
{{- if not .Values.topologyAware.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "cortex-store-gateway.fullname" . }}
  labels: {{ include "cortex-store-gateway.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.store_gateway.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.store_gateway.replicas }}
  selector:
    matchLabels: {{ include "cortex-store-gateway.matchLabels" . | nindent 6 }}
  updateStrategy:
    {{- toYaml .Values.store_gateway.strategy | nindent 4 }}
  serviceName: {{ template "cortex-store-gateway.headlessname" . }}
  {{- if .Values.store_gateway.persistentVolume.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: storage
        {{- if .Values.store_gateway.persistentVolume.annotations }}
        annotations:
          {{ toYaml .Values.store_gateway.persistentVolume.annotations | nindent 10 }}
        {{- end }}
      spec:
        {{- if .Values.store_gateway.persistentVolume.storageClass }}
        {{- if (eq "-" .Values.store_gateway.persistentVolume.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.store_gateway.persistentVolume.storageClass }}"
        {{- end }}
        {{- end }}
        accessModes:
          {{- toYaml .Values.store_gateway.persistentVolume.accessModes | nindent 10 }}
        resources:
          requests:
            storage: "{{ .Values.store_gateway.persistentVolume.size }}"
  {{- end }}
  template:
    metadata:
      labels: {{ include "cortex-store-gateway.labels" . | nindent 8 }}
        app.kubernetes.io/part-of: memberlist
        {{- with .Values.store_gateway.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include "cortex.configChecksum" . }}
        {{- with .Values.store_gateway.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Values.store_gateway.serviceAccount.name | default (include "cortex.serviceAccountName" . ) }}
      {{- if .Values.store_gateway.priorityClassName }}
      priorityClassName: {{ .Values.store_gateway.priorityClassName }}
      {{- end }}
      securityContext: {{- toYaml .Values.store_gateway.securityContext | nindent 8 }}
      initContainers:
        {{- toYaml .Values.store_gateway.initContainers | nindent 8 }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.store_gateway.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.store_gateway.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.store_gateway.tolerations | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.store_gateway.terminationGracePeriodSeconds }}
      volumes:
        {{- include "cortex.configVolume" . | nindent 8 }}
        - name: runtime-config
          configMap:
            name: {{ template "cortex.runtimeconfigname" . }}
        {{- if not .Values.store_gateway.persistentVolume.enabled }}
        - name: storage
          emptyDir: {}
        {{- end }}
        {{- if .Values.store_gateway.extraVolumes }}
        {{- toYaml .Values.store_gateway.extraVolumes | nindent 8 }}
        {{- end }}
      containers:
        {{- if .Values.store_gateway.extraContainers }}
        {{ toYaml .Values.store_gateway.extraContainers | nindent 8 }}
        {{- end }}
        - name: store-gateway
          image: "{{ .Values.image.repository }}:{{ include "cortex.imageTag" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "-target=store-gateway"
            - "-config.file=/etc/cortex/cortex.yaml"
            {{- include "cortex.memcached" . | nindent 12}}
            {{- range $key, $value := .Values.store_gateway.extraArgs }}
            - "-{{ $key }}={{ $value }}"
            {{- end }}
          volumeMounts:
            {{- if .Values.store_gateway.extraVolumeMounts }}
            {{- toYaml .Values.store_gateway.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: config
              mountPath: /etc/cortex
            - name: runtime-config
              mountPath: /etc/cortex-runtime-config
            - name: storage
              mountPath: "/data"
              {{- if .Values.store_gateway.persistentVolume.subPath }}
              subPath: {{ .Values.store_gateway.persistentVolume.subPath }}
              {{- end }}
          ports:
            - name: http-metrics
              containerPort: {{ .Values.config.server.http_listen_port }}
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.config.server.grpc_listen_port }}
              protocol: TCP
            - name: gossip
              containerPort: {{ .Values.config.memberlist.bind_port }}
              protocol: TCP
          startupProbe:
            {{- toYaml .Values.store_gateway.startupProbe | nindent 12 }}
          livenessProbe:
            {{- toYaml .Values.store_gateway.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.store_gateway.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.store_gateway.resources | nindent 12 }}
          securityContext: {{- toYaml .Values.store_gateway.containerSecurityContext | nindent 12 }}
          {{- if .Values.store_gateway.env }}
          env:
            {{- toYaml .Values.store_gateway.env | nindent 12 }}
          {{- end }}
{{- end }}
{{- if .Values.topologyAware.enabled }}
{{- range $availabilityCell := .Values.store_gateway.availabilityCells }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "cortex-store-gateway.fullname-zone-aware" dict "Values" $.Values "Release" $.Release "Chart" $.Chart "AvailabilityCell" $availabilityCell.name }}
  labels: {{ include "cortex-store-gateway.labels" $ | nindent 4 }}
{{- $.Values.topologyAware.zoneLabel | nindent 4 }}: {{ $availabilityCell.name }}
    {{- if $.Values.topologyAware.rolloutOperator.enabled }}
    rollout-group: store_gateway
    {{- end }}
  annotations:
    {{- toYaml $.Values.store_gateway.annotations | nindent 4 }}
    {{- if and $.Values.topologyAware.rolloutOperator.enabled (ge (len $.Values.store_gateway.availabilityCells) (int $.Values.config.store_gateway.lifecycler.replication_factor)) }}
    rollout-max-unavailable: "{{ $.Values.store_gateway.replicas }}"
    {{- end }}
spec:
  replicas: {{ $.Values.store_gateway.replicas }}
  selector:
    matchLabels: {{ include "cortex-store-gateway.matchLabels" $ | nindent 6 }}
{{- $.Values.topologyAware.zoneLabel | nindent 6 }}: {{ $availabilityCell.name }}
  updateStrategy:
    {{- toYaml $.Values.store_gateway.statefulStrategy | nindent 4 }}
  serviceName: {{ template "cortex-store-gateway.headlessname-zone-aware" dict "Values" $.Values "Release" $.Release "Chart" $.Chart "AvailabilityCell" $availabilityCell.name }}
  {{- if $.Values.store_gateway.persistentVolume.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: storage
        {{- if $.Values.store_gateway.persistentVolume.annotations }}
        annotations:
          {{ toYaml $.Values.store_gateway.persistentVolume.annotations | nindent 10 }}
        {{- end }}
      spec:
        {{- if $.Values.store_gateway.persistentVolume.storageClass }}
        {{- if (eq "-" $.Values.store_gateway.persistentVolume.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ $.Values.store_gateway.persistentVolume.storageClass }}"
        {{- end }}
        {{- end }}
        accessModes:
          {{- toYaml $.Values.store_gateway.persistentVolume.accessModes | nindent 10 }}
        resources:
          requests:
            storage: "{{ $.Values.store_gateway.persistentVolume.size }}"
  {{- end }}
  template:
    metadata:
      labels: {{ include "cortex-store-gateway.labels" $ | nindent 8 }}
        app.kubernetes.io/part-of: memberlist
{{- $.Values.topologyAware.zoneLabel | nindent 8 }}: {{ $availabilityCell.name }}
        {{- if $.Values.topologyAware.rolloutOperator.enabled }}
        rollout-group: store_gateway
        name: {{ template "cortex-store-gateway.fullname-zone-aware" dict "Values" $.Values "Release" $.Release "Chart" $.Chart "AvailabilityCell" $availabilityCell.name }}
        {{- end }}
        {{- with $.Values.store_gateway.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include "cortex.configChecksum" $ }}
        {{- with $.Values.store_gateway.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ $.Values.store_gateway.serviceAccount.name | default (include "cortex.serviceAccountName" $ ) }}
      {{- if $.Values.store_gateway.priorityClassName }}
      priorityClassName: {{ $.Values.store_gateway.priorityClassName }}
      {{- end }}
      securityContext: {{- toYaml $.Values.store_gateway.securityContext | nindent 8 }}
      initContainers:
        {{- toYaml $.Values.store_gateway.initContainers | nindent 8 }}
      {{- if $.Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range $.Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ $.Values.topologyAware.zoneLabel }}
                operator: In
                values:
                - {{ $availabilityCell.name }}    
      tolerations:
      {{- toYaml $availabilityCell.tolerations | nindent 8 }}
      terminationGracePeriodSeconds: {{ $.Values.store_gateway.terminationGracePeriodSeconds }}
      volumes:
        {{- include "cortex.configVolume" $ | nindent 8 }}
        - name: runtime-config
          configMap:
            name: {{ template "cortex.runtimeconfigname" $ }}
        {{- if not $.Values.store_gateway.persistentVolume.enabled }}
        - name: storage
          emptyDir: {}
        {{- end }}
        {{- if $.Values.store_gateway.extraVolumes }}
        {{- toYaml $.Values.store_gateway.extraVolumes | nindent 8 }}
        {{- end }}
      containers:
        {{- if $.Values.store_gateway.extraContainers }}
        {{ toYaml $.Values.store_gateway.extraContainers | nindent 8 }}
        {{- end }}
        - name: store-gateway
          image: "{{ $.Values.image.repository }}:{{ include "cortex.imageTag" $ }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          args:
            - "-target=store-gateway"
            - "-config.file=/etc/cortex/cortex.yaml"
            - "-store-gateway.sharding-ring.instance-availability-zone={{ $availabilityCell.name }}"
            - "-store-gateway.sharding-ring.zone-awareness-enabled=true"
            {{- include "cortex.memcached" $ | nindent 12}}
            {{- range $key, $value := $.Values.store_gateway.extraArgs }}
            - "-{{ $key }}={{ $value }}"
            {{- end }}
          volumeMounts:
            {{- if $.Values.store_gateway.extraVolumeMounts }}
            {{- toYaml $.Values.store_gateway.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: config
              mountPath: /etc/cortex
            - name: runtime-config
              mountPath: /etc/cortex-runtime-config
            - name: storage
              mountPath: "/data"
              {{- if $.Values.store_gateway.persistentVolume.subPath }}
              subPath: {{ $.Values.store_gateway.persistentVolume.subPath }}
              {{- end }}
          ports:
            - name: http-metrics
              containerPort: {{ $.Values.config.server.http_listen_port }}
              protocol: TCP
            - name: grpc
              containerPort: {{ $.Values.config.server.grpc_listen_port }}
              protocol: TCP
            - name: gossip
              containerPort: {{ $.Values.config.memberlist.bind_port }}
              protocol: TCP
          startupProbe:
            {{- toYaml $.Values.store_gateway.startupProbe | nindent 12 }}
          livenessProbe:
            {{- toYaml $.Values.store_gateway.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml $.Values.store_gateway.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml $.Values.store_gateway.resources | nindent 12 }}
          securityContext: {{- toYaml $.Values.store_gateway.containerSecurityContext | nindent 12 }}
          {{- if $.Values.store_gateway.env }}
          env:
            {{- toYaml $.Values.store_gateway.env | nindent 12 }}
          {{- end }}
---
{{- end }}
{{- end }}
{{- end -}}