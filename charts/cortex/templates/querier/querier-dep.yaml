apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "cortex-querier.fullname" . }}
  labels: {{ include "cortex-querier.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.querier.annotations | nindent 4 }}
spec:
  {{- if not .Values.querier.autoscaling.enabled }}
  replicas: {{ .Values.querier.replicas }}
  {{- end }}
  selector:
    matchLabels: {{ include "cortex-querier.matchLabels" . | nindent 6 }}
  strategy:
    {{- toYaml .Values.querier.strategy | nindent 4 }}
  template:
    metadata:
      labels: {{ include "cortex-querier.labels" . | nindent 8 }}
        {{- with .Values.querier.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include "cortex.configChecksum" . }}
        {{- with .Values.querier.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Values.querier.serviceAccount.name | default (include "cortex.serviceAccountName" . ) }}
      {{- if .Values.querier.priorityClassName }}
      priorityClassName: {{ .Values.querier.priorityClassName }}
      {{- end }}
      securityContext: {{- toYaml .Values.querier.securityContext | nindent 8 }}
      initContainers:
        {{- toYaml .Values.querier.initContainers | nindent 8 }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
        - name: querier
          image: "{{ .Values.image.repository }}:{{ include "cortex.imageTag" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "-target=querier"
            - "-config.file=/etc/cortex/cortex.yaml"
            - "-querier.frontend-address={{ template "cortex-query-frontend.headlessname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:{{ .Values.config.server.grpc_listen_port }}"
            {{- if and (eq .Values.config.storage.engine "blocks") (not .Values.config.store_gateway.sharding_enabled) }}
            - "-querier.store-gateway-addresses=dns+{{ template "cortex-store-gateway.headlessname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:{{ .Values.config.server.grpc_listen_port }}"
            {{- end }}
            {{- include "cortex.memcached" . | nindent 12}}
          {{- range $key, $value := .Values.querier.extraArgs }}
            - "-{{ $key }}={{ $value }}"
          {{- end }}
          {{- if .Values.topologyAware.enabled }}
            - "-distributor.zone-awareness-enabled=true"
            - "-store-gateway.sharding-ring.zone-awareness-enabled=true"
          {{- end }}
          volumeMounts:
            {{- if .Values.querier.extraVolumeMounts }}
            {{- toYaml .Values.querier.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: config
              mountPath: /etc/cortex
            - name: runtime-config
              mountPath: /etc/cortex-runtime-config
            - name: storage
              mountPath: "/data"
              subPath: {{ .Values.querier.persistentVolume.subPath }}
          ports:
            - name: http-metrics
              containerPort: {{ .Values.config.server.http_listen_port }}
              protocol: TCP
          startupProbe:
            {{- toYaml .Values.querier.startupProbe | nindent 12 }}
          livenessProbe:
            {{- toYaml .Values.querier.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.querier.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.querier.resources | nindent 12 }}
          securityContext: {{- toYaml .Values.querier.containerSecurityContext | nindent 12 }}
          env:
            {{- if .Values.querier.env }}
              {{- toYaml .Values.querier.env | nindent 12 }}
            {{- end }}
          {{- with .Values.querier.lifecycle }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- if .Values.querier.extraContainers }}
        {{- toYaml .Values.querier.extraContainers | nindent 8}}
        {{- end }}
      nodeSelector:
        {{- toYaml .Values.querier.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.querier.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.querier.tolerations | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.querier.terminationGracePeriodSeconds }}
      volumes:
        {{- include "cortex.configVolume" . | nindent 8 }}
        - name: runtime-config
          configMap:
            name: {{ template "cortex.runtimeconfigname" . }}
        - name: storage
          emptyDir: {}
        {{- if .Values.querier.extraVolumes }}
        {{- toYaml .Values.querier.extraVolumes | nindent 8}}
        {{- end }}
